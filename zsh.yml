---
- name: Setup Zsh environment
  hosts: renaissance

  vars_files:
    - secret_vars_common.yml

  vars:
    user_path: "/home/{{ ansible_user }}"

  tasks:
    - name: Update apt cache
      become: yes
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Zsh
      become: yes
      ansible.builtin.apt:
        name: zsh
        state: present

    - name: Ensure ~/.zshrc exists
      become: yes
      ansible.builtin.file:
        path: "{{ user_path }}/.zshrc"
        state: touch
        owner: "{{ ansible_env.USER }}"
        mode: "0644"

    - name: Ensure ~/.alias exists
      become: yes
      ansible.builtin.file:
        path: "{{ user_path }}/.alias"
        state: touch
        owner: "{{ ansible_env.USER }}"
        mode: "0644"

    - name: Ensure Zsh plugins directory exists
      become: yes
      ansible.builtin.file:
        path: "{{ user_path }}/.zsh/plugins"
        state: directory
        owner: "{{ ansible_env.USER }}"
        mode: "0755"

    - name: Clone zsh-syntax-highlighting
      become: yes
      ansible.builtin.git:
        repo: "https://github.com/zsh-users/zsh-syntax-highlighting.git"
        dest: "{{ user_path }}/.zsh/plugins/zsh-syntax-highlighting"
        version: master
        clone: yes
        update: yes

    - name: Clone zsh-autosuggestions
      become: yes
      ansible.builtin.git:
        repo: "https://github.com/zsh-users/zsh-autosuggestions"
        dest: "{{ user_path }}/.zsh/plugins/zsh-autosuggestions"
        version: master
        clone: yes
        update: yes

    - name: ZSH default shell
      become: yes
      ansible.builtin.shell: >
        chsh -s $(which zsh) {{ ansible_user }}

    - name: p10k git
      become: yes
      ansible.builtin.git:
        repo: "https://github.com/romkatv/powerlevel10k.git"
        dest: "{{ user_path }}/powerlevel10k"
        version: master
        clone: yes
        update: yes
        depth: 1

    # - name: Install Pure theme
    #   ansible.builtin.git:
    #     repo: "https://github.com/sindresorhus/pure.git"
    #     dest: "{{ user_path }}/.zsh/pure"
    #     version: main
    #     clone: yes
    #     update: yes

    # - name: Create symbolic links for Pure theme
    #   become: yes
    #   ansible.builtin.shell:
    #     cmd: |
    #       ln -s "{{ ansible_env.HOME }}/.zsh/pure/pure.zsh" /usr/local/share/zsh/site-functions/prompt_pure_setup && ln -s "{{ ansible_env.HOME }}/.zsh/pure/async.zsh" /usr/local/share/zsh/site-functions/async
    #   args:
    #     creates: "/usr/local/share/zsh/site-functions/prompt_pure_setup"

    - name: Copy .zshrc configuration
      become: yes
      ansible.builtin.copy:
        dest: "{{ user_path }}/.zshrc"
        content: |
          source ~/.alias

          ZSH_THEME="powerlevel10k/powerlevel10k"
          POWERLEVEL9K_MODE="nerdfont-complete"

          # ZSH_THEME="pure"
          # fpath+=(~/.zsh/pure)

          # autoload -U promptinit; promptinit
          # prompt pure

          # add to exports
          export FZF_DEFAULT_COMMAND='ag --hidden -g ""' # speedup fzf search

          # Bonus: more advance speedup / add ripgrep
          if type rg &> /dev/null; then
            # export FZF_DEFAULT_COMMAND='rg --files'
            export FZF_DEFAULT_COMMAND='rg --files --hidden --follow -g "!.git"'
            export FZF_DEFAULT_OPTS='-m --height 50% --border'
          fi

          [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
          plugins=(fzf)

          source ~/.zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
          source ~/.zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh

          # History
          HISTSIZE=1000000
          SAVEHIST=1000000

          HISTORY_IGNORE="(ls|pwd|exit|cd)*"

          setopt EXTENDED_HISTORY      # Делать записи в файле истории в формате ':start:elapsed;command'.
          setopt INC_APPEND_HISTORY    # Писать данные в файл истории немедленно, а не тогда, когда осуществляется выход из оболочки.
          setopt SHARE_HISTORY         # Использовать во всех сессиях общее хранилище истории.
          setopt HIST_IGNORE_DUPS      # Не делать повторную запись о только что записанном событии.
          setopt HIST_IGNORE_ALL_DUPS  # Удалять старую запись о событии в том случае, если новое событие является дубликатом старого.
          setopt HIST_IGNORE_SPACE     # Не делать записи о командах, начинающихся с пробела.
          setopt HIST_SAVE_NO_DUPS     # Не записывать дубликаты событий в файл истории.
          setopt HIST_VERIFY           # Перед выполнением команд показывать записи о них из истории команд.
          setopt APPEND_HISTORY        # Добавлять записи к файлу истории (по умолчанию).
          setopt HIST_NO_STORE         # Не хранить записи о командах history.
          setopt HIST_REDUCE_BLANKS    # Убирать лишние пробелы из командных строк, добавляемых в историю.
           
          export HISTFILE=~/.zsh_history
          export MANPATH="/usr/local/man:$MANPATH"

          # You may need to manually set your language environment
          export LANG=en_US.UTF-8

          source ~/powerlevel10k/powerlevel10k.zsh-theme
          [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
        mode: "0644"
        owner: "{{ ansible_env.USER }}"

    - name: Copy .alias configuration
      become: yes
      ansible.builtin.copy:
        dest: "{{ user_path }}/.alias"
        content: |
          ## Basic
          alias rr='source ~/.zshrc';
          alias rra='source ~/.alias';
          alias c='clear';
          alias cl='clear';
          alias f='fuck ';

          alias v='nvim';
          alias sudovim='sudo -u adunda sudo /bin/nvim '; # change username
          alias sudov='sudo -u adunda sudo /bin/nvim '; # change username

          ## Tmux
          alias tnew='tmux attach || tmux new';
          alias ta='tmux attach';
          alias t0='tmux attach -t 0';
          alias t1='tmux attach -t 1';
          alias t2='tmux attach -t 2';
          alias t3='tmux attach -t 3';
          alias t4='tmux attach -t 4';
          alias t5='tmux attach -t 5';
          alias t6='tmux attach -t 6';
          alias t7='tmux attach -t 7';
          alias t8='tmux attach -t 8';
          alias t9='tmux attach -t 9';

          ## Yarn dev
          alias d='yarn dev';

          ## NPM / YARN cache
          alias npm='npm'; # --prefer-online ';
          alias n='npm --prefer-offline '; # set as default for npm
          alias ni='n i';
          alias nug='npm update -g';

          ## Yarn
          alias yarn='yarn';
          alias yoff='yarn --prefer-offline --cache-folder ~/.cache ';

          alias y='yoff';
          alias ya="yoff add"
          alias yad="yoff add --dev"

          alias yrm="yarn remove"
          alias yrun="yarn run"
          alias yserv="yarn serve"
          alias ys="yarn start"
          alias yt="yarn test"
          alias yup='yarn upgrade-interactive --latest'

          ## Git
          alias g='git ';
          alias gs='git status'
          alias ga='git add '
          alias gaa='git add --all'

          alias glog='git log --graph --pretty='\''%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an %ae>%Creset'\'' --abbrev-commit'

          ## Git, Show git branches sorted by created date
          alias gbl='git branch --sort=-committerdate';
          alias glop="git log --pretty=format:'%C(yellow)%h|%Cred%ad|%Cblue%an|%Cgreen%d %Creset%s' --date=short | column -ts'|' | less -r"
          alias gco='git checkout'
          alias gcom='git checkout master'
          alias gcoM='git checkout main'
          alias gcob='git checkout -b '
          alias gp='git pull'
          alias gpa='git pull && git lfs pull'
          alias gf='git fetch'
          alias gstl='git stash list'
          alias gstalast='git stash apply stash@{0}'
          alias gcm='git commit -m'
          alias gc!='git commit -v --amend'
          alias gcn!='git commit -v --no-edit --amend'

          ## Git, rebase
          alias grc='gaa . && git rebase --continue'
          alias gra='git rebase --abort'
          alias grs='function grs() {
          local count=$(gcount)
          echo $count
          eval "git rebase -i HEAD~"$count""
          };grs'
          alias grsm='git rebase origin/master && git push -f'

          ## Git, merge
          alias gmaster='git merge master';
          alias gmain='git merge main';
          alias gmc='gaa . && git merge --continue';

          ## Git, branch
          alias gbl='git branch -l -v'

          ## Git, add / git force push
          alias gaacm='gaa . && gcm'
          alias gpf='git push -f'
          alias gaacmf='gaa . && gcn! && gpf'

          ## Git, stash
          alias gsl='git stash list'
          alias gsa='git stash apply'

          ## Git, count number of commits to master
          alias gcount='git fetch origin master && git rev-list --count HEAD ^origin/master'
          ## Basic
          alias rr='source ~/.zshrc';
          alias rra='source ~/.alias';
          alias c='clear';
          alias cl='clear';
          alias up='sudo apt update && sudo apt upgrade -y && sudo apt autoremove -y';

          # k3s / minikube
          alias kk='k3s kubectl';

          # Docker
          dockerStopAllPS() { docker stop $(docker ps -a -q); }
          alias dockerStopAll=dockerStopAllPS;
          alias dockerCleanAll='sudo docker system prune && sudo docker image prune -f && sudo docker image prune -a';
          alias dockerDf="sudo docker system df -v"; # show disk usage
          alias dockerPrune='sudo docker system prune -a'; # clean unused disks

          # LS # install eza
          #alias ls='eza --icons --grid -a';
          #alias l='eza --icons -l -g -a';
          #alias lt="eza --tree --icons -a -I '.git|__pycache__|.mypy_cache|.ipynb_checkpoints|node_modules|.next|dist|public'";

        mode: "0644"
        owner: "{{ ansible_env.USER }}"
